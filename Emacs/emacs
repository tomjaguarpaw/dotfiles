(setq base-path "~/Config/dotfiles/Emacs/")

(load (concat base-path "keybindings"))
(load (concat base-path "latex"))

;; Bootstrap straight.el
;;
;;     https://github.com/raxod502/straight.el#getting-started
(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 5))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
	(url-retrieve-synchronously
	 "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
	 'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
    (load bootstrap-file nil 'nomessage))

; http://steve.yegge.googlepages.com/effective-emacs
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'menu-bar-mode) (menu-bar-mode -1))
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
(setq inhibit-startup-screen t)

(show-paren-mode 1)
(column-number-mode +1)

(add-to-list 'auto-mode-alist '("\\.ks\\'" . lisp-mode))

(add-hook 'haskell-mode-hook 'whitespace-mode)
(add-hook 'lisp-mode-hook 'whitespace-mode)
(add-hook 'lisp-interaction-mode-hook 'whitespace-mode)
(add-hook 'lisp-mode-hook (lambda () (setq indent-tabs-mode nil)))

;; We use straight to get use-package.  See
;;
;;     https://github.com/raxod502/straight.el#integration-with-use-package
(straight-use-package 'use-package)

(use-package attrap
  :straight t
  )

(use-package dante
  :straight t
  :after haskell-mode
  :commands 'dante-mode
  :init
  (add-hook 'haskell-mode-hook 'flycheck-mode)
  ;; OR:
  ;; (add-hook 'haskell-mode-hook 'flymake-mode)
  (add-hook 'haskell-mode-hook 'dante-mode)
  )

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(dante-methods (quote (bare-cabal bare-ghci)))
 '(load-home-init-file t t)
 '(whitespace-style
   (quote
    (face trailing tabs lines-tail newline empty tab-mark))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "black" :foreground "white" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 113 :width normal :foundry "unknown" :family "Inconsolata"))))
 '(whitespace-tab ((t (:background "black" :foreground "cyan")))))

(setq ring-bell-function 'ignore)
